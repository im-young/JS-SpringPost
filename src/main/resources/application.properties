spring.application.name=SpringPost
#sever.port = 9000
spring.jpa.show-sql=false
#spring.jpa.show-sql=true : \uD55C\uC904 \uCD9C\uB825
spring.jpa.properties.hibernate.format_sql=true
# 위의 코드는 sql 포멧이 잘 정리되어 보임(한줄이 아니라)
logging.level.org.hibernate.SQL=DEBUG
# 포맷된 SQL을 출력하려면 spring.jpa.show-sql=true 대신 Hibernate의 SQL 로그를 DEBUG 레벨로 설정해야 합니다.
##이 방식은 spring.jpa.properties.hibernate.format_sql=true 설정과 함께 작동하며, 포맷된 SQL을 로그로 확인할 수 있습니다.

#에러 메세지 설정 (errors.properties : 파일에 있는 에러)
spring.messages.basename=errors

# 파일 업로드 크기 제한 설정 (10MB)
# 파일 하나 용량
spring.servlet.multipart.max-file-size=10MB 
# 총용량
spring.servlet.multipart.max-request-size=50MB 

# 파일 업로드 경로 설정
file.upload.path=C:/workspace/JavaSpring/postProject_fileUpload


logging.level.com.example.HomeController=INFO
#-
#    - `log.info`가 호출되었지만, 현재 프로젝트의 로그 설정 파일 (예: `application.properties` 또는 `application.yml`)에서 로그 출력 레벨이 `INFO` 등급 이상이어야 로그가 출력됩니다.

#페이지 사이즈
page.countPerPage=5

# 페이지 그룹 사이즈
page.pagePerGroup=10